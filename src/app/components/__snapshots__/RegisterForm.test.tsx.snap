// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RegisterForm /> when clear button is disabled 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm
    pristine={true}
  >
    <Connect(Form(RegisterForm))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="register"
      getFormState={[Function]}
      keepDirtyOnReinitialize={false}
      persistentSubmitErrors={false}
      pristine={true}
      pure={true}
      shouldAsyncValidate={[Function]}
      shouldValidate={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
    >
      <Form(RegisterForm)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={false}
        dispatch={[Function]}
        enableReinitialize={false}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="register"
        getFormState={[Function]}
        initialize={[Function]}
        initialized={false}
        invalid={true}
        keepDirtyOnReinitialize={false}
        persistentSubmitErrors={false}
        pristine={true}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "age": Object {
              "count": 1,
              "name": "age",
              "type": "Field",
            },
            "confirmPassword": Object {
              "count": 1,
              "name": "confirmPassword",
              "type": "Field",
            },
            "email": Object {
              "count": 1,
              "name": "email",
              "type": "Field",
            },
            "password": Object {
              "count": 1,
              "name": "password",
              "type": "Field",
            },
            "username": Object {
              "count": 1,
              "name": "username",
              "type": "Field",
            },
          }
        }
        reset={[Function]}
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldValidate={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={
          Object {
            "age": "Required",
            "confirmPassword": "Required",
            "password": "Required",
            "username": "Required",
          }
        }
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={false}
        validExceptSubmit={false}
        values={Object {}}
      >
        <RegisterForm
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={false}
          dispatch={[Function]}
          form="register"
          handleSubmit={[Function]}
          initialize={[Function]}
          initialized={false}
          invalid={true}
          pristine={true}
          pure={true}
          reset={[Function]}
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          untouch={[Function]}
          valid={false}
        >
          <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              label="Username"
              name="username"
              type="text"
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Username"
                name="username"
                normalize={[Function]}
                type="text"
                validate={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Username"
                  name="username"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="text"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                >
                  <Component
                    input={
                      Object {
                        "name": "username",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Username"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="text"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Username
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="username"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Username"
                          type="text"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Password"
              name="password"
              type="password"
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Password"
                name="password"
                normalize={[Function]}
                type="password"
                validate={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Password"
                  name="password"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="password"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                >
                  <Component
                    input={
                      Object {
                        "name": "password",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Password"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="password"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Password
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="password"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Confirm Password"
              name="confirmPassword"
              type="password"
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Confirm Password"
                name="confirmPassword"
                normalize={[Function]}
                type="password"
                validate={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Confirm Password"
                  name="confirmPassword"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="password"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                >
                  <Component
                    input={
                      Object {
                        "name": "confirmPassword",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Confirm Password"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="password"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Confirm Password
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="confirmPassword"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Confirm Password"
                          type="password"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Email"
              name="email"
              type="email"
              validate={[Function]}
              warn={[Function]}
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": false,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": undefined,
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {},
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": true,
                    "validExceptSubmit": true,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Email"
                name="email"
                normalize={[Function]}
                type="email"
                validate={[Function]}
                warn={[Function]}
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": undefined,
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Email"
                  name="email"
                  normalize={[Function]}
                  pristine={true}
                  type="email"
                  validate={[Function]}
                  warn={[Function]}
                >
                  <Component
                    input={
                      Object {
                        "name": "email",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Email"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": undefined,
                        "form": "register",
                        "initial": undefined,
                        "invalid": false,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": true,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="email"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Email
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="email"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Email"
                          type="email"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Age"
              name="age"
              type="number"
              validate={
                Array [
                  [Function],
                  [Function],
                  [Function],
                ]
              }
              warn={[Function]}
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Age"
                name="age"
                normalize={[Function]}
                type="number"
                validate={
                  Array [
                    [Function],
                    [Function],
                    [Function],
                  ]
                }
                warn={[Function]}
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Age"
                  name="age"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="number"
                  validate={
                    Array [
                      [Function],
                      [Function],
                      [Function],
                    ]
                  }
                  warn={[Function]}
                >
                  <Component
                    input={
                      Object {
                        "name": "age",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Age"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="number"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Age
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="age"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Age"
                          type="number"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <div>
              <button
                disabled={false}
                type="submit"
              >
                Submit
              </button>
              <button
                disabled={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
                type="button"
              >
                Clear Values
              </button>
            </div>
          </form>
        </RegisterForm>
      </Form(RegisterForm)>
    </Connect(Form(RegisterForm))>
  </ReduxForm>
</Provider>
`;

exports[`<RegisterForm /> when clear button is enabled 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm
    pristine={false}
    submitting={false}
  >
    <Connect(Form(RegisterForm))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="register"
      getFormState={[Function]}
      keepDirtyOnReinitialize={false}
      persistentSubmitErrors={false}
      pristine={false}
      pure={true}
      shouldAsyncValidate={[Function]}
      shouldValidate={[Function]}
      submitting={false}
      touchOnBlur={true}
      touchOnChange={false}
    >
      <Form(RegisterForm)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={false}
        dispatch={[Function]}
        enableReinitialize={false}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="register"
        getFormState={[Function]}
        initialize={[Function]}
        initialized={false}
        invalid={true}
        keepDirtyOnReinitialize={false}
        persistentSubmitErrors={false}
        pristine={true}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "age": Object {
              "count": 1,
              "name": "age",
              "type": "Field",
            },
            "confirmPassword": Object {
              "count": 1,
              "name": "confirmPassword",
              "type": "Field",
            },
            "email": Object {
              "count": 1,
              "name": "email",
              "type": "Field",
            },
            "password": Object {
              "count": 1,
              "name": "password",
              "type": "Field",
            },
            "username": Object {
              "count": 1,
              "name": "username",
              "type": "Field",
            },
          }
        }
        reset={[Function]}
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldValidate={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={
          Object {
            "age": "Required",
            "confirmPassword": "Required",
            "password": "Required",
            "username": "Required",
          }
        }
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={false}
        validExceptSubmit={false}
        values={Object {}}
      >
        <RegisterForm
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={false}
          dispatch={[Function]}
          form="register"
          handleSubmit={[Function]}
          initialize={[Function]}
          initialized={false}
          invalid={true}
          pristine={true}
          pure={true}
          reset={[Function]}
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          untouch={[Function]}
          valid={false}
        >
          <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              label="Username"
              name="username"
              type="text"
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Username"
                name="username"
                normalize={[Function]}
                type="text"
                validate={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Username"
                  name="username"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="text"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                >
                  <Component
                    input={
                      Object {
                        "name": "username",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Username"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="text"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Username
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="username"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Username"
                          type="text"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Password"
              name="password"
              type="password"
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Password"
                name="password"
                normalize={[Function]}
                type="password"
                validate={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Password"
                  name="password"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="password"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                >
                  <Component
                    input={
                      Object {
                        "name": "password",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Password"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="password"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Password
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="password"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Confirm Password"
              name="confirmPassword"
              type="password"
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Confirm Password"
                name="confirmPassword"
                normalize={[Function]}
                type="password"
                validate={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Confirm Password"
                  name="confirmPassword"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="password"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                >
                  <Component
                    input={
                      Object {
                        "name": "confirmPassword",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Confirm Password"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="password"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Confirm Password
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="confirmPassword"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Confirm Password"
                          type="password"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Email"
              name="email"
              type="email"
              validate={[Function]}
              warn={[Function]}
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": false,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": undefined,
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {},
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": true,
                    "validExceptSubmit": true,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Email"
                name="email"
                normalize={[Function]}
                type="email"
                validate={[Function]}
                warn={[Function]}
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": undefined,
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Email"
                  name="email"
                  normalize={[Function]}
                  pristine={true}
                  type="email"
                  validate={[Function]}
                  warn={[Function]}
                >
                  <Component
                    input={
                      Object {
                        "name": "email",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Email"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": undefined,
                        "form": "register",
                        "initial": undefined,
                        "invalid": false,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": true,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="email"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Email
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="email"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Email"
                          type="email"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Age"
              name="age"
              type="number"
              validate={
                Array [
                  [Function],
                  [Function],
                  [Function],
                ]
              }
              warn={[Function]}
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Age"
                name="age"
                normalize={[Function]}
                type="number"
                validate={
                  Array [
                    [Function],
                    [Function],
                    [Function],
                  ]
                }
                warn={[Function]}
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Age"
                  name="age"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="number"
                  validate={
                    Array [
                      [Function],
                      [Function],
                      [Function],
                    ]
                  }
                  warn={[Function]}
                >
                  <Component
                    input={
                      Object {
                        "name": "age",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Age"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="number"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Age
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="age"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Age"
                          type="number"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <div>
              <button
                disabled={false}
                type="submit"
              >
                Submit
              </button>
              <button
                disabled={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
                type="button"
              >
                Clear Values
              </button>
            </div>
          </form>
        </RegisterForm>
      </Form(RegisterForm)>
    </Connect(Form(RegisterForm))>
  </ReduxForm>
</Provider>
`;

exports[`<RegisterForm /> when submitting button is disabled 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm
    submitting={true}
  >
    <Connect(Form(RegisterForm))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="register"
      getFormState={[Function]}
      keepDirtyOnReinitialize={false}
      persistentSubmitErrors={false}
      pure={true}
      shouldAsyncValidate={[Function]}
      shouldValidate={[Function]}
      submitting={true}
      touchOnBlur={true}
      touchOnChange={false}
    >
      <Form(RegisterForm)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={false}
        dispatch={[Function]}
        enableReinitialize={false}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="register"
        getFormState={[Function]}
        initialize={[Function]}
        initialized={false}
        invalid={true}
        keepDirtyOnReinitialize={false}
        persistentSubmitErrors={false}
        pristine={true}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "age": Object {
              "count": 1,
              "name": "age",
              "type": "Field",
            },
            "confirmPassword": Object {
              "count": 1,
              "name": "confirmPassword",
              "type": "Field",
            },
            "email": Object {
              "count": 1,
              "name": "email",
              "type": "Field",
            },
            "password": Object {
              "count": 1,
              "name": "password",
              "type": "Field",
            },
            "username": Object {
              "count": 1,
              "name": "username",
              "type": "Field",
            },
          }
        }
        reset={[Function]}
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldValidate={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={
          Object {
            "age": "Required",
            "confirmPassword": "Required",
            "password": "Required",
            "username": "Required",
          }
        }
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={false}
        validExceptSubmit={false}
        values={Object {}}
      >
        <RegisterForm
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={false}
          dispatch={[Function]}
          form="register"
          handleSubmit={[Function]}
          initialize={[Function]}
          initialized={false}
          invalid={true}
          pristine={true}
          pure={true}
          reset={[Function]}
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          untouch={[Function]}
          valid={false}
        >
          <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              label="Username"
              name="username"
              type="text"
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Username"
                name="username"
                normalize={[Function]}
                type="text"
                validate={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Username"
                  name="username"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="text"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                >
                  <Component
                    input={
                      Object {
                        "name": "username",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Username"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="text"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Username
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="username"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Username"
                          type="text"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Password"
              name="password"
              type="password"
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Password"
                name="password"
                normalize={[Function]}
                type="password"
                validate={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Password"
                  name="password"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="password"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                >
                  <Component
                    input={
                      Object {
                        "name": "password",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Password"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="password"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Password
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="password"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Confirm Password"
              name="confirmPassword"
              type="password"
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Confirm Password"
                name="confirmPassword"
                normalize={[Function]}
                type="password"
                validate={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Confirm Password"
                  name="confirmPassword"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="password"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                >
                  <Component
                    input={
                      Object {
                        "name": "confirmPassword",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Confirm Password"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="password"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Confirm Password
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="confirmPassword"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Confirm Password"
                          type="password"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Email"
              name="email"
              type="email"
              validate={[Function]}
              warn={[Function]}
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": false,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": undefined,
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {},
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": true,
                    "validExceptSubmit": true,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Email"
                name="email"
                normalize={[Function]}
                type="email"
                validate={[Function]}
                warn={[Function]}
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": undefined,
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Email"
                  name="email"
                  normalize={[Function]}
                  pristine={true}
                  type="email"
                  validate={[Function]}
                  warn={[Function]}
                >
                  <Component
                    input={
                      Object {
                        "name": "email",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Email"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": undefined,
                        "form": "register",
                        "initial": undefined,
                        "invalid": false,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": true,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="email"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Email
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="email"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Email"
                          type="email"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Age"
              name="age"
              type="number"
              validate={
                Array [
                  [Function],
                  [Function],
                  [Function],
                ]
              }
              warn={[Function]}
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Age"
                name="age"
                normalize={[Function]}
                type="number"
                validate={
                  Array [
                    [Function],
                    [Function],
                    [Function],
                  ]
                }
                warn={[Function]}
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Age"
                  name="age"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="number"
                  validate={
                    Array [
                      [Function],
                      [Function],
                      [Function],
                    ]
                  }
                  warn={[Function]}
                >
                  <Component
                    input={
                      Object {
                        "name": "age",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Age"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="number"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Age
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="age"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Age"
                          type="number"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <div>
              <button
                disabled={false}
                type="submit"
              >
                Submit
              </button>
              <button
                disabled={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
                type="button"
              >
                Clear Values
              </button>
            </div>
          </form>
        </RegisterForm>
      </Form(RegisterForm)>
    </Connect(Form(RegisterForm))>
  </ReduxForm>
</Provider>
`;

exports[`<RegisterForm /> when submitting button is enabled 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm
    submitting={false}
  >
    <Connect(Form(RegisterForm))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="register"
      getFormState={[Function]}
      keepDirtyOnReinitialize={false}
      persistentSubmitErrors={false}
      pure={true}
      shouldAsyncValidate={[Function]}
      shouldValidate={[Function]}
      submitting={false}
      touchOnBlur={true}
      touchOnChange={false}
    >
      <Form(RegisterForm)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={false}
        dispatch={[Function]}
        enableReinitialize={false}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="register"
        getFormState={[Function]}
        initialize={[Function]}
        initialized={false}
        invalid={true}
        keepDirtyOnReinitialize={false}
        persistentSubmitErrors={false}
        pristine={true}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "age": Object {
              "count": 1,
              "name": "age",
              "type": "Field",
            },
            "confirmPassword": Object {
              "count": 1,
              "name": "confirmPassword",
              "type": "Field",
            },
            "email": Object {
              "count": 1,
              "name": "email",
              "type": "Field",
            },
            "password": Object {
              "count": 1,
              "name": "password",
              "type": "Field",
            },
            "username": Object {
              "count": 1,
              "name": "username",
              "type": "Field",
            },
          }
        }
        reset={[Function]}
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldValidate={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={
          Object {
            "age": "Required",
            "confirmPassword": "Required",
            "password": "Required",
            "username": "Required",
          }
        }
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={false}
        validExceptSubmit={false}
        values={Object {}}
      >
        <RegisterForm
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={false}
          dispatch={[Function]}
          form="register"
          handleSubmit={[Function]}
          initialize={[Function]}
          initialized={false}
          invalid={true}
          pristine={true}
          pure={true}
          reset={[Function]}
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          untouch={[Function]}
          valid={false}
        >
          <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              label="Username"
              name="username"
              type="text"
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Username"
                name="username"
                normalize={[Function]}
                type="text"
                validate={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Username"
                  name="username"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="text"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                >
                  <Component
                    input={
                      Object {
                        "name": "username",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Username"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="text"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Username
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="username"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Username"
                          type="text"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Password"
              name="password"
              type="password"
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Password"
                name="password"
                normalize={[Function]}
                type="password"
                validate={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Password"
                  name="password"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="password"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                >
                  <Component
                    input={
                      Object {
                        "name": "password",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Password"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="password"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Password
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="password"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Confirm Password"
              name="confirmPassword"
              type="password"
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Confirm Password"
                name="confirmPassword"
                normalize={[Function]}
                type="password"
                validate={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Confirm Password"
                  name="confirmPassword"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="password"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                >
                  <Component
                    input={
                      Object {
                        "name": "confirmPassword",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Confirm Password"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="password"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Confirm Password
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="confirmPassword"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Confirm Password"
                          type="password"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Email"
              name="email"
              type="email"
              validate={[Function]}
              warn={[Function]}
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": false,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": undefined,
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {},
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": true,
                    "validExceptSubmit": true,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Email"
                name="email"
                normalize={[Function]}
                type="email"
                validate={[Function]}
                warn={[Function]}
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": undefined,
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Email"
                  name="email"
                  normalize={[Function]}
                  pristine={true}
                  type="email"
                  validate={[Function]}
                  warn={[Function]}
                >
                  <Component
                    input={
                      Object {
                        "name": "email",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Email"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": undefined,
                        "form": "register",
                        "initial": undefined,
                        "invalid": false,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": true,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="email"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Email
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="email"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Email"
                          type="email"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Age"
              name="age"
              type="number"
              validate={
                Array [
                  [Function],
                  [Function],
                  [Function],
                ]
              }
              warn={[Function]}
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Age"
                name="age"
                normalize={[Function]}
                type="number"
                validate={
                  Array [
                    [Function],
                    [Function],
                    [Function],
                  ]
                }
                warn={[Function]}
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Age"
                  name="age"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="number"
                  validate={
                    Array [
                      [Function],
                      [Function],
                      [Function],
                    ]
                  }
                  warn={[Function]}
                >
                  <Component
                    input={
                      Object {
                        "name": "age",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Age"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="number"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Age
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="age"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Age"
                          type="number"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <div>
              <button
                disabled={false}
                type="submit"
              >
                Submit
              </button>
              <button
                disabled={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
                type="button"
              >
                Clear Values
              </button>
            </div>
          </form>
        </RegisterForm>
      </Form(RegisterForm)>
    </Connect(Form(RegisterForm))>
  </ReduxForm>
</Provider>
`;

exports[`<RegisterForm /> without props 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm>
    <Connect(Form(RegisterForm))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="register"
      getFormState={[Function]}
      keepDirtyOnReinitialize={false}
      persistentSubmitErrors={false}
      pure={true}
      shouldAsyncValidate={[Function]}
      shouldValidate={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
    >
      <Form(RegisterForm)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={false}
        dispatch={[Function]}
        enableReinitialize={false}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="register"
        getFormState={[Function]}
        initialize={[Function]}
        initialized={false}
        invalid={true}
        keepDirtyOnReinitialize={false}
        persistentSubmitErrors={false}
        pristine={true}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "age": Object {
              "count": 1,
              "name": "age",
              "type": "Field",
            },
            "confirmPassword": Object {
              "count": 1,
              "name": "confirmPassword",
              "type": "Field",
            },
            "email": Object {
              "count": 1,
              "name": "email",
              "type": "Field",
            },
            "password": Object {
              "count": 1,
              "name": "password",
              "type": "Field",
            },
            "username": Object {
              "count": 1,
              "name": "username",
              "type": "Field",
            },
          }
        }
        reset={[Function]}
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldValidate={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={
          Object {
            "age": "Required",
            "confirmPassword": "Required",
            "password": "Required",
            "username": "Required",
          }
        }
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={false}
        validExceptSubmit={false}
        values={Object {}}
      >
        <RegisterForm
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={false}
          dispatch={[Function]}
          form="register"
          handleSubmit={[Function]}
          initialize={[Function]}
          initialized={false}
          invalid={true}
          pristine={true}
          pure={true}
          reset={[Function]}
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          untouch={[Function]}
          valid={false}
        >
          <form
            onSubmit={[Function]}
          >
            <Field
              component={[Function]}
              label="Username"
              name="username"
              type="text"
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Username"
                name="username"
                normalize={[Function]}
                type="text"
                validate={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Username"
                  name="username"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="text"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                >
                  <Component
                    input={
                      Object {
                        "name": "username",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Username"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="text"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Username
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="username"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Username"
                          type="text"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Password"
              name="password"
              type="password"
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Password"
                name="password"
                normalize={[Function]}
                type="password"
                validate={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Password"
                  name="password"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="password"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                >
                  <Component
                    input={
                      Object {
                        "name": "password",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Password"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="password"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Password
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="password"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Confirm Password"
              name="confirmPassword"
              type="password"
              validate={
                Array [
                  [Function],
                  [Function],
                ]
              }
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Confirm Password"
                name="confirmPassword"
                normalize={[Function]}
                type="password"
                validate={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Confirm Password"
                  name="confirmPassword"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="password"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                >
                  <Component
                    input={
                      Object {
                        "name": "confirmPassword",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Confirm Password"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="password"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Confirm Password
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="confirmPassword"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Confirm Password"
                          type="password"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Email"
              name="email"
              type="email"
              validate={[Function]}
              warn={[Function]}
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": false,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": undefined,
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {},
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": true,
                    "validExceptSubmit": true,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Email"
                name="email"
                normalize={[Function]}
                type="email"
                validate={[Function]}
                warn={[Function]}
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": false,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": undefined,
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {},
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": true,
                      "validExceptSubmit": true,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Email"
                  name="email"
                  normalize={[Function]}
                  pristine={true}
                  type="email"
                  validate={[Function]}
                  warn={[Function]}
                >
                  <Component
                    input={
                      Object {
                        "name": "email",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Email"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": undefined,
                        "form": "register",
                        "initial": undefined,
                        "invalid": false,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": true,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="email"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Email
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="email"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Email"
                          type="email"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <Field
              component={[Function]}
              label="Age"
              name="age"
              type="number"
              validate={
                Array [
                  [Function],
                  [Function],
                  [Function],
                ]
              }
              warn={[Function]}
            >
              <Connect(ConnectedField)
                _reduxForm={
                  Object {
                    "anyTouched": false,
                    "array": Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "removeAll": [Function],
                      "shift": [Function],
                      "splice": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    },
                    "arrayInsert": [Function],
                    "arrayMove": [Function],
                    "arrayPop": [Function],
                    "arrayPush": [Function],
                    "arrayRemove": [Function],
                    "arrayRemoveAll": [Function],
                    "arrayShift": [Function],
                    "arraySplice": [Function],
                    "arraySwap": [Function],
                    "arrayUnshift": [Function],
                    "asyncErrors": undefined,
                    "asyncValidate": [Function],
                    "asyncValidating": false,
                    "autofill": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearAsyncError": [Function],
                    "clearSubmit": [Function],
                    "clearSubmitErrors": [Function],
                    "destroy": [Function],
                    "destroyOnUnmount": true,
                    "dirty": false,
                    "dispatch": [Function],
                    "enableReinitialize": false,
                    "error": undefined,
                    "focus": [Function],
                    "forceUnregisterOnUnmount": false,
                    "form": "register",
                    "getFormState": [Function],
                    "getValues": [Function],
                    "initialValues": undefined,
                    "initialize": [Function],
                    "initialized": false,
                    "invalid": true,
                    "keepDirtyOnReinitialize": false,
                    "persistentSubmitErrors": false,
                    "pristine": true,
                    "pure": true,
                    "register": [Function],
                    "registerField": [Function],
                    "registerInnerOnSubmit": [Function],
                    "registeredFields": Object {
                      "age": Object {
                        "count": 1,
                        "name": "age",
                        "type": "Field",
                      },
                      "confirmPassword": Object {
                        "count": 1,
                        "name": "confirmPassword",
                        "type": "Field",
                      },
                      "email": Object {
                        "count": 1,
                        "name": "email",
                        "type": "Field",
                      },
                      "password": Object {
                        "count": 1,
                        "name": "password",
                        "type": "Field",
                      },
                      "username": Object {
                        "count": 1,
                        "name": "username",
                        "type": "Field",
                      },
                    },
                    "reset": [Function],
                    "sectionPrefix": undefined,
                    "setSubmitFailed": [Function],
                    "setSubmitSucceeded": [Function],
                    "shouldAsyncValidate": [Function],
                    "shouldValidate": [Function],
                    "startAsyncValidation": [Function],
                    "startSubmit": [Function],
                    "stopAsyncValidation": [Function],
                    "stopSubmit": [Function],
                    "submit": [Function],
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "submitting": false,
                    "syncErrors": Object {
                      "age": "Required",
                      "confirmPassword": "Required",
                      "password": "Required",
                      "username": "Required",
                    },
                    "syncWarnings": Object {},
                    "touch": [Function],
                    "touchOnBlur": true,
                    "touchOnChange": false,
                    "triggerSubmit": undefined,
                    "unregister": [Function],
                    "unregisterField": [Function],
                    "untouch": [Function],
                    "updateSyncErrors": [Function],
                    "updateSyncWarnings": [Function],
                    "valid": false,
                    "validExceptSubmit": false,
                    "values": Object {},
                    "warning": undefined,
                  }
                }
                component={[Function]}
                label="Age"
                name="age"
                normalize={[Function]}
                type="number"
                validate={
                  Array [
                    [Function],
                    [Function],
                    [Function],
                  ]
                }
                warn={[Function]}
              >
                <ConnectedField
                  _reduxForm={
                    Object {
                      "anyTouched": false,
                      "array": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "arrayInsert": [Function],
                      "arrayMove": [Function],
                      "arrayPop": [Function],
                      "arrayPush": [Function],
                      "arrayRemove": [Function],
                      "arrayRemoveAll": [Function],
                      "arrayShift": [Function],
                      "arraySplice": [Function],
                      "arraySwap": [Function],
                      "arrayUnshift": [Function],
                      "asyncErrors": undefined,
                      "asyncValidate": [Function],
                      "asyncValidating": false,
                      "autofill": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearAsyncError": [Function],
                      "clearSubmit": [Function],
                      "clearSubmitErrors": [Function],
                      "destroy": [Function],
                      "destroyOnUnmount": true,
                      "dirty": false,
                      "dispatch": [Function],
                      "enableReinitialize": false,
                      "error": undefined,
                      "focus": [Function],
                      "forceUnregisterOnUnmount": false,
                      "form": "register",
                      "getFormState": [Function],
                      "getValues": [Function],
                      "initialValues": undefined,
                      "initialize": [Function],
                      "initialized": false,
                      "invalid": true,
                      "keepDirtyOnReinitialize": false,
                      "persistentSubmitErrors": false,
                      "pristine": true,
                      "pure": true,
                      "register": [Function],
                      "registerField": [Function],
                      "registerInnerOnSubmit": [Function],
                      "registeredFields": Object {
                        "age": Object {
                          "count": 1,
                          "name": "age",
                          "type": "Field",
                        },
                        "confirmPassword": Object {
                          "count": 1,
                          "name": "confirmPassword",
                          "type": "Field",
                        },
                        "email": Object {
                          "count": 1,
                          "name": "email",
                          "type": "Field",
                        },
                        "password": Object {
                          "count": 1,
                          "name": "password",
                          "type": "Field",
                        },
                        "username": Object {
                          "count": 1,
                          "name": "username",
                          "type": "Field",
                        },
                      },
                      "reset": [Function],
                      "sectionPrefix": undefined,
                      "setSubmitFailed": [Function],
                      "setSubmitSucceeded": [Function],
                      "shouldAsyncValidate": [Function],
                      "shouldValidate": [Function],
                      "startAsyncValidation": [Function],
                      "startSubmit": [Function],
                      "stopAsyncValidation": [Function],
                      "stopSubmit": [Function],
                      "submit": [Function],
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "syncErrors": Object {
                        "age": "Required",
                        "confirmPassword": "Required",
                        "password": "Required",
                        "username": "Required",
                      },
                      "syncWarnings": Object {},
                      "touch": [Function],
                      "touchOnBlur": true,
                      "touchOnChange": false,
                      "triggerSubmit": undefined,
                      "unregister": [Function],
                      "unregisterField": [Function],
                      "untouch": [Function],
                      "updateSyncErrors": [Function],
                      "updateSyncWarnings": [Function],
                      "valid": false,
                      "validExceptSubmit": false,
                      "values": Object {},
                      "warning": undefined,
                    }
                  }
                  asyncValidating={false}
                  component={[Function]}
                  dirty={false}
                  dispatch={[Function]}
                  label="Age"
                  name="age"
                  normalize={[Function]}
                  pristine={true}
                  syncError="Required"
                  type="number"
                  validate={
                    Array [
                      [Function],
                      [Function],
                      [Function],
                    ]
                  }
                  warn={[Function]}
                >
                  <Component
                    input={
                      Object {
                        "name": "age",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onDragStart": [Function],
                        "onDrop": [Function],
                        "onFocus": [Function],
                        "value": "",
                      }
                    }
                    label="Age"
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "register",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    type="number"
                  >
                    <div
                      className="fyjcn3x"
                    >
                      <label>
                        Age
                      </label>
                      <div>
                        <input
                          className="f17g2th6"
                          name="age"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          placeholder="Age"
                          type="number"
                          value=""
                        />
                      </div>
                    </div>
                  </Component>
                </ConnectedField>
              </Connect(ConnectedField)>
            </Field>
            <div>
              <button
                disabled={false}
                type="submit"
              >
                Submit
              </button>
              <button
                disabled={true}
                onClick={[Function]}
                style={
                  Object {
                    "marginLeft": 10,
                  }
                }
                type="button"
              >
                Clear Values
              </button>
            </div>
          </form>
        </RegisterForm>
      </Form(RegisterForm)>
    </Connect(Form(RegisterForm))>
  </ReduxForm>
</Provider>
`;
